openapi: "3.0.3"
info:
  title: "Sheet API"
  description: "API for managing Google Sheets data with automatic hierarchical grouping detection and dynamic sheet ID support"
  version: "0.0.1"
  contact:
    name: "Utsman"
servers:
  - url: "http://0.0.0.0:8910"
paths:
  /:
    get:
      description: "Health check endpoint and landing page"
      responses:
        "200":
          description: "OK - Returns React landing page with interactive API documentation"
          content:
            text/html: {}

  # --- Start of Default Sheet ID endpoints ---
  /api/sheets/{sheetName}:
    get:
      summary: "Get sheet data (default ID)"
      description: "Retrieve data from a Google Sheet using the default SHEET_ID. Automatically detects hierarchical patterns, returning nested JSON for grouped data or a flat array for regular data. Merges items from duplicated parent groups."
      security:
        - ApiKeyAuth: []
        - BearerAuth: []
      parameters:
        - name: "sheetName"
          in: "path"
          required: true
          schema:
            type: "string"
            example: "MySheet"
        - name: "per_page"
          in: "query"
          schema:
            type: "integer"
            default: 10
        - name: "offset"
          in: "query"
          schema:
            type: "integer"
            default: 1
      responses:
        "200":
          description: "Successful response with sheet data."
          headers:
            X-Total-Count:
              description: "Total number of rows (only for flat data)"
              schema:
                type: "integer"
          content:
            application/json:
              schema:
                oneOf:
                  - type: "array"
                  - type: "object"
    post:
      summary: "Add new row (default ID)"
      description: |
        Appends a new row to the sheet using the default SHEET_ID.
        - **Root Append**: If called without query parameters, it appends a new root-level entity.
        - **Nested Append**: If called with query parameters, it uses them to provide context (e.g., parent group) for the new nested item.
      security:
        - ApiKeyAuth: []
        - BearerAuth: []
      parameters:
        - name: "sheetName"
          in: "path"
          required: true
          schema:
            type: "string"
            example: "MySheet"
        - name: "..."
          in: "query"
          description: "Dynamic query parameters for nested appends. Parameter name must match a column header (e.g., `?curriculums=Group%20Name`)."
          schema:
            type: "string"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              additionalProperties: true
      responses:
        "200":
          description: "Successfully added the row."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          description: "Bad request."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    patch:
      summary: "Update existing row (default ID)"
      description: |
        Partially updates a single row in the sheet using the default SHEET_ID.
        - **Root Update**: If called without query parameters, it updates the first root entity.
        - **Nested Update**: If called with query parameters, it uses them as identifiers to find and update a specific nested row.
      security:
        - ApiKeyAuth: []
        - BearerAuth: []
      parameters:
        - name: "sheetName"
          in: "path"
          required: true
          schema:
            type: "string"
            example: "MySheet"
        - name: "..."
          in: "query"
          description: "Dynamic query parameters to identify the target row. Parameter names must match column headers (e.g., `?curriculums=Group&content_name=Item`)."
          schema:
            type: "string"
      requestBody:
        required: true
        description: "A JSON object containing the single field and new value to update."
        content:
          application/json:
            schema:
              type: "object"
              additionalProperties: true
              maxProperties: 1
              minProperties: 1
      responses:
        "200":
          description: "Successfully updated the row."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          description: "Bad request."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "Not Found - Field or target row not found."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  # --- Start of Dynamic Sheet ID endpoints ---
  /api/sheetId/{sheetId}:
    get:
      summary: "Get sheet names for a specific sheet ID"
      description: "Retrieve all sheet names (tabs) from a specific Google Sheets document."
      security:
        - ApiKeyAuth: []
        - BearerAuth: []
      parameters:
        - name: "sheetId"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "List of sheet names."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "string"

  /api/sheetId/{sheetId}/{sheetName}:
    get:
      summary: "Get sheet data (custom ID)"
      description: "Retrieve data from any Google Sheet. Automatically detects hierarchical patterns, returning nested JSON for grouped data or a flat array for regular data. Merges items from duplicated parent groups."
      security:
        - ApiKeyAuth: []
        - BearerAuth: []
      parameters:
        - name: "sheetId"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "sheetName"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "per_page"
          in: "query"
          schema:
            type: "integer"
            default: 10
        - name: "offset"
          in: "query"
          schema:
            type: "integer"
            default: 1
      responses:
        "200":
          description: "Successful response with sheet data."
          headers:
            X-Total-Count:
              description: "Total number of rows (only for flat data)"
              schema:
                type: "integer"
          content:
            application/json:
              schema:
                oneOf:
                  - type: "array"
                  - type: "object"
    post:
      summary: "Add new row (custom ID)"
      description: |
        Appends a new row to the specified sheet.
        - **Root Append**: If called without query parameters, it appends a new root-level entity.
        - **Nested Append**: If called with query parameters, it uses them to provide context (e.g., parent group) for the new nested item.
      security:
        - ApiKeyAuth: []
        - BearerAuth: []
      parameters:
        - name: "sheetId"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "sheetName"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "..."
          in: "query"
          description: "Dynamic query parameters for nested appends. Parameter name must match a column header (e.g., `?curriculums=Group%20Name`)."
          schema:
            type: "string"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              additionalProperties: true
      responses:
        "200":
          description: "Successfully added the row."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          description: "Bad request."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    patch:
      summary: "Update existing row (custom ID)"
      description: |
        Partially updates a single row in the specified sheet.
        - **Root Update**: If called without query parameters, it updates the first root entity.
        - **Nested Update**: If called with query parameters, it uses them as identifiers to find and update a specific nested row.
      security:
        - ApiKeyAuth: []
        - BearerAuth: []
      parameters:
        - name: "sheetId"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "sheetName"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "..."
          in: "query"
          description: "Dynamic query parameters to identify the target row. Parameter names must match column headers (e.g., `?curriculums=Group&content_name=Item`)."
          schema:
            type: "string"
      requestBody:
        required: true
        description: "A JSON object containing the single field and new value to update."
        content:
          application/json:
            schema:
              type: "object"
              additionalProperties: true
              maxProperties: 1
              minProperties: 1
      responses:
        "200":
          description: "Successfully updated the row."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessResponse"
        "400":
          description: "Bad request."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: "Not Found - Field or target row not found."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/sheets/{sheetName}/schema:
    get:
      summary: "Get sheet schema (default ID)"
      description: "Get schema information from sheet headers (A1-Z1) for validation using the default SHEET_ID."
      # ... (rest is similar)
  /api/sheetId/{sheetId}/{sheetName}/schema:
    get:
      summary: "Get schema for custom sheet"
      description: "Get schema information from sheet headers (A1-Z1) for validation using a custom sheet ID."
      # ... (rest is similar)

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
    BearerAuth:
      type: http
      scheme: bearer

  schemas:
    SuccessResponse:
      type: "object"
      properties:
        ok:
          type: "boolean"
        updatedRange:
          type: "string"
          description: "The A1 notation of the cells that were updated."

    ErrorResponse:
      type: "object"
      properties:
        error:
          type: "string"
        details:
          type: "string"
